The following training was conducted:

C: 0.8
K: 3
R: 7
E: 3
B: 64
optimizer: <class 'torch.optim.adam.Adam'>
criterion: CrossEntropyLoss()
lr: 0.01
data_name: CIFAR10
iid: True
shards_each: 2
ternary: False
personalized: False
model: <class 'models.Net_4'>
LESS_DATA: 3000
SERVER_TEST_SIZE: 100
SERVER_TRAIN_SIZE: 100


Information from Server:

Accuracy: [0.1, 0.14, 0.13, 0.27, 0.24, 0.25, 0.34]
Loss: [2.306148648262024, 2.2608808279037476, 2.296815514564514, 1.9476431012153625, 1.912953794002533, 1.848032295703888, 1.8081612586975098]
Received data: [(1, 23), (1, 23), (1, 23), (2, 250910), (2, 250910), (2, 250910), (3, 250910), (3, 250910), (3, 250910), (4, 250910), (4, 250910), (4, 250910), (5, 250910), (5, 250910), (5, 250910), (6, 250910), (6, 250910), (6, 250910), (7, 250910), (7, 250910), (7, 250910), (8, 250910), (8, 250910), (8, 250910)]
Send data: [(1, 22), (1, 8151), (1, 612), (1, 252617), (1, 22), (1, 8151), (1, 612), (1, 252617), (1, 22), (1, 8151), (1, 612), (1, 252617), (2, 21), (2, 250910), (2, 21), (2, 19), (2, 250910), (3, 21), (3, 21), (3, 19), (3, 250910), (3, 250910), (4, 21), (4, 250910), (4, 21), (4, 19), (4, 250910), (5, 21), (5, 250910), (5, 19), (5, 21), (5, 250910), (6, 19), (6, 21), (6, 250910), (6, 21), (6, 250910), (7, 21), (7, 250910), (7, 21), (7, 250910), (7, 19), (8, 21), (8, 19), (8, 21), (8, 250910), (8, 250910), (8, 21), (8, 250910), (8, 21), (8, 250910), (8, 21), (8, 250910)]


Information from Client_1:

Signals: ['Update', 'Update', 'Update', 'Skip', 'Update', 'Update', 'Skip', 'Finish', None]
Data distribution: [(0, 101), (1, 97), (2, 88), (3, 100), (4, 107), (5, 92), (6, 88), (7, 100), (8, 104), (9, 123)]
Accuracy: [0.225, 0.192, 0.256, 0.154, 0.192, 0.232, 0.24, 0.303, 0.352, 0.342, 0.332, 0.368, 0.343, 0.421, 0.449]
Loss: [2.1848986446857452, 2.1241511180996895, 2.039773039519787, 2.1859603375196457, 2.162350207567215, 2.111383505165577, 1.990229457616806, 1.8517700731754303, 1.8428490236401558, 1.7775694578886032, 1.8406304344534874, 1.7074444144964218, 1.7492977008223534, 1.566056989133358, 1.4541934803128242]
Received data: [(0, 22), (0, 8151), (0, 612), (0, 252617), (0, 21), (0, 250910), (1, 21), (1, 250910), (2, 21), (2, 250910), (3, 19), (3, 21), (3, 250910), (4, 21), (4, 250910), (5, 19), (5, 21), (5, 250910)]
Send data: [(0, 23), (1, 250910), (2, 250910), (3, 250910), (3, 250910), (4, 250910), (5, 250910), (5, 250910)]
Strategies (if used): []


Information from Client_2:

Signals: ['Skip', 'Skip', 'Skip', 'Update', 'Update', 'Skip', 'Update', 'Finish', None]
Data distribution: [(0, 92), (1, 108), (2, 100), (3, 98), (4, 97), (5, 90), (6, 93), (7, 110), (8, 101), (9, 111)]
Accuracy: [0.247, 0.281, 0.291, 0.303, 0.293, 0.362, 0.28, 0.397, 0.438]
Loss: [1.9443721324205399, 1.938994362950325, 1.869181327521801, 1.889265425503254, 1.9225914925336838, 1.7190593257546425, 1.9303361549973488, 1.6360448822379112, 1.5637832209467888]
Received data: [(0, 22), (0, 8151), (0, 612), (0, 252617), (0, 19), (0, 19), (0, 19), (0, 21), (0, 250910), (1, 21), (1, 250910), (2, 19), (2, 21), (2, 250910), (3, 21), (3, 250910)]
Send data: [(0, 23), (0, 250910), (0, 250910), (0, 250910), (1, 250910), (2, 250910), (2, 250910), (3, 250910)]
Strategies (if used): []


Information from Client_3:

Signals: ['Update', 'Update', 'Update', 'Update', 'Skip', 'Update', 'Update', 'Finish', None]
Data distribution: [(0, 104), (1, 89), (2, 98), (3, 110), (4, 87), (5, 99), (6, 89), (7, 99), (8, 132), (9, 93)]
Accuracy: [0.182, 0.211, 0.21, 0.246, 0.229, 0.234, 0.219, 0.254, 0.255, 0.233, 0.306, 0.336, 0.276, 0.358, 0.39, 0.354, 0.411, 0.412]
Loss: [2.1581893265247345, 2.0860978066921234, 2.0738599374890327, 1.9906671643257141, 2.005115330219269, 2.044674038887024, 2.145255036652088, 2.011230058968067, 1.9642251282930374, 1.9590483754873276, 1.8514199778437614, 1.7613627687096596, 1.8940984904766083, 1.6895704045891762, 1.647483542561531, 1.747510902583599, 1.6424240991473198, 1.614676371216774]
Received data: [(0, 22), (0, 8151), (0, 612), (0, 252617), (0, 21), (0, 250910), (1, 21), (1, 250910), (2, 21), (2, 250910), (3, 21), (3, 250910), (4, 19), (4, 21), (4, 250910), (5, 21), (5, 250910), (6, 21), (6, 250910)]
Send data: [(0, 23), (1, 250910), (2, 250910), (3, 250910), (4, 250910), (4, 250910), (5, 250910), (6, 250910)]
Strategies (if used): []


Duration: 10 minutes 45 seconds
