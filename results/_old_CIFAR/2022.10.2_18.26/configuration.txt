The following training was conducted:

C: 0.8
K: 2
R: 15
E: 3
B: 64
optimizer: <class 'torch.optim.adam.Adam'>
criterion: CrossEntropyLoss()
lr: 0.01
data_name: MNIST
shards_each: 2
ternary: False
personalized: True
iid: True
model: <class 'models.Net_2'>
LESS_DATA: 1000
SERVER_TEST_SIZE: 1000
SERVER_TRAIN_SIZE: 100


Information from Server:

Accuracy: [0.28, 0.78, 0.88, 0.94, 0.92, 0.94, 0.95, 0.93, 0.95, 0.96, 0.96, 0.97, 0.93, 0.97, 0.96]
Loss: [3.026726722717285, 0.4807271361351013, 0.2774975374341011, 0.16981049627065659, 0.19223572686314583, 0.23939506709575653, 0.21005017310380936, 0.24941135197877884, 0.23541075736284256, 0.1422742512077093, 0.2014351710677147, 0.15966366976499557, 0.3109372779726982, 0.2177320122718811, 0.1152608459815383]
Received data: [(1, 23), (1, 23), (2, 117919), (2, 117919), (3, 117919), (3, 117919), (4, 117919), (4, 117919), (5, 117919), (5, 117919), (6, 117919), (6, 117919), (7, 117919), (7, 117919), (8, 117919), (8, 117919), (9, 117919), (9, 117919), (10, 117919), (10, 117919), (11, 117919), (11, 117919), (12, 117919), (12, 117919), (13, 117919), (13, 117919), (14, 117919), (14, 117919), (15, 117919), (15, 117919), (16, 117919), (16, 117919)]
Send data: [(1, 20), (1, 4151), (1, 610), (1, 119468), (1, 20), (1, 4151), (1, 610), (1, 119468), (2, 19), (2, 21), (2, 117919), (3, 21), (3, 117919), (3, 19), (4, 19), (4, 21), (4, 117919), (5, 21), (5, 19), (5, 117919), (6, 19), (6, 21), (6, 117919), (7, 21), (7, 19), (7, 117919), (8, 19), (8, 21), (8, 117919), (9, 21), (9, 19), (9, 117919), (10, 19), (10, 21), (10, 117919), (11, 21), (11, 19), (11, 117919), (12, 19), (12, 21), (12, 117919), (13, 19), (13, 21), (13, 117919), (14, 21), (14, 117919), (14, 19), (15, 21), (15, 117919), (15, 19), (16, 19), (16, 21), (16, 117919), (16, 21), (16, 117919), (16, 21), (16, 117919)]


Duration: 10 minutes 39 seconds
Information from Client_1:

Signals: ['Skip', 'Update', 'Skip', 'Update', 'Skip', 'Update', 'Skip', 'Update', 'Skip', 'Update', 'Skip', 'Skip', 'Update', 'Update', 'Skip', 'Finish', None]
Data distribution: [(0, 54), (1, 69), (2, 45), (3, 51), (4, 61), (5, 45), (6, 39), (7, 40), (8, 47), (9, 49)]
Accuracy: [0.124, 0.862, 0.862, 0.964, 0.964, 0.986, 0.986, 0.998, 0.998, 0.998, 0.998, 0.998, 0.996, 0.998, 0.998, 0.99]
Loss: [4.122907787561417, 0.4329467583447695, 0.4366682879626751, 0.11974873719736934, 0.11878029815852642, 0.05165354814380407, 0.05050087149720639, 0.019606142886914313, 0.019662590348161757, 0.015354621456936002, 0.015371486661024392, 0.015290214156266302, 0.015957191964844242, 0.011526391375809908, 0.011525844864081591, 0.02737442652869504]
Received data: [(0, 20), (0, 4151), (0, 610), (0, 119468), (0, 19), (0, 21), (0, 117919), (1, 19), (1, 21), (1, 117919), (2, 19), (2, 21), (2, 117919), (3, 19), (3, 21), (3, 117919), (4, 19), (4, 21), (4, 117919), (5, 19), (5, 19), (5, 21), (5, 117919), (6, 21), (6, 117919), (7, 19), (7, 21), (7, 117919)]
Send data: [(0, 23), (0, 117919), (1, 117919), (1, 117919), (2, 117919), (2, 117919), (3, 117919), (3, 117919), (4, 117919), (4, 117919), (5, 117919), (5, 117919), (5, 117919), (6, 117919), (7, 117919), (7, 117919)]
Strategies (if used): []


Information from Client_2:

Signals: ['Update', 'Skip', 'Update', 'Skip', 'Update', 'Skip', 'Update', 'Skip', 'Update', 'Skip', 'Update', 'Update', 'Skip', 'Skip', 'Update', 'Finish', None]
Data distribution: [(0, 45), (1, 49), (2, 48), (3, 40), (4, 52), (5, 45), (6, 54), (7, 53), (8, 64), (9, 50)]
Accuracy: [0.842, 0.842, 0.974, 0.974, 0.986, 0.986, 0.996, 0.996, 1.0, 1.0, 0.992, 0.998, 0.998, 0.998, 0.984, 0.992]
Loss: [0.4960993565618992, 0.5027899798005819, 0.10243998328223825, 0.1007388411089778, 0.04141314176376909, 0.04079069243744016, 0.0224329738994129, 0.02208812191383913, 0.0073199977923650295, 0.007407931087072939, 0.026519297956838273, 0.008234674984123558, 0.008241779258241877, 0.008229302256950177, 0.04833415139000863, 0.027302472735755146]
Received data: [(0, 20), (0, 4151), (0, 610), (0, 119468), (0, 21), (0, 117919), (1, 19), (1, 21), (1, 117919), (2, 19), (2, 21), (2, 117919), (3, 19), (3, 21), (3, 117919), (4, 19), (4, 21), (4, 117919), (5, 19), (5, 21), (5, 117919), (6, 21), (6, 117919), (7, 19), (7, 19), (7, 21), (7, 117919), (8, 21), (8, 117919)]
Send data: [(0, 23), (1, 117919), (1, 117919), (2, 117919), (2, 117919), (3, 117919), (3, 117919), (4, 117919), (4, 117919), (5, 117919), (5, 117919), (6, 117919), (7, 117919), (7, 117919), (7, 117919), (8, 117919)]
Strategies (if used): []


